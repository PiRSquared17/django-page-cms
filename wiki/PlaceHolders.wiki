#summary Documentation about placeholders

=Dynamic localized placeholders in templates=

The syntax for placeholder is the following:

{{{
{% placeholder <name> [on <page>] [with <widget>] [parsed] [as <varname>] %}
}}}

If the `page` option is not specified the CMS will automatically take the current page (by using the `current_page` context variable) to get the content of the placeholder.

If the `widget` option is not specified the CMS will render a simple `TextInput`. 

If you use the keyword `parsed` the content of the placeholder will be evaluated as Django template, within the current context.

Each placeholder with the `parsed` parameter defined will also have a note in the admin interface noting its ability to be evaluated as template.

If you use the option `as` you will define in the template's context with the content of the placeholder that you will be able to use for different purpose.

Here is some possible syntax:

{{{
{% placeholder title %}
{% placeholder title parsed %}

{% placeholder title with TextIntput %}
{% placeholder body with Textarea parsed %}
{% placeholder foo on current_page with TextInput as foo %}

{% placeholder body on root_page %}
{% placeholder title on current_page parsed %}
{% placeholder right-column parsed as right_column %}

..random content..

<div class="my_funky_column">{{ right_column|safe }}</div>
}}}

=List of placeholder widgets=

Placeholder could be rendered with different widgets:

==TextInput==

a simple line input

{{{
{% placeholder [name] with TextInput %}
}}}

==Textarea==

a multi line input

{{{
{% placeholder [name] with Textarea %}
}}}

==RichTextarea==

A simple [http://batiste.dosimple.ch/blog/posts/2007-09-11-1/rich-text-editor-jquery.html Rich Text Area Editor] based on jQuery

{{{
{% placeholder [name] with RichTextarea %}
}}}

http://rte-light.googlecode.com/svn/trunk/screenshot.png

==WYMEditor==

a complete jQuery Rich Text Editor called [http://www.wymeditor.org/ wymeditor]

{{{
{% placeholder [name] with WYMEditor %}
}}}

http://drupal.org/files/images/wymeditor.preview.jpg

==markItUpMarkdown==

markdown editor based on [http://markitup.jaysalvat.com/home/ markitup]

{{{
{% placeholder [name] with markItUpMarkdown %}
}}}

http://www.webdesignerdepot.com/wp-content/uploads/2008/11/05_markitup.jpg

==markItUpHTML==

{{{
{% placeholder [name] with markItUpHTML %}
}}}

HTML editor based on [http://markitup.jaysalvat.com/home/ markitup]

http://t37.net/files/markitup-081127.jpg

==TinyMCE==

HTML editor based on [http://tinymce.moxiecode.com/ TinyMCE]

*You should install [http://pypi.python.org/pypi/django-tinymce/1.5 django-tinymce] first*

And then follow carefully the instructions noted here : http://code.google.com/p/django-tinymce/source/browse/trunk/docs/installation.rst

{{{
{% placeholder [name] with TinyMCE %}
}}}

http://mgccl.com/gallery2/g2data/albums/2006/11/tinymce.png

== EditArea ==

Allows to edit raw html code with syntax highlight based on [http://www.cdolivet.com/index.php?page=editArea editArea]

The code (Javascript, CSS) for editarea is not included into the codebase. To get the code you can add this into your svn external dependecies:

{{{
pages/media/pages/edit_area -r29 https://editarea.svn.sourceforge.net/svnroot/editarea/trunk/edit_area
}}}

Usage:

{{{
{% placeholder [name] with EditArea %}
}}}

http://sourceforge.net/dbimage.php?id=69125&image.png