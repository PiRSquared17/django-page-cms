#summary Explain how to integrate django page cms into a legacy django project
#labels Featured

=Install in legacy project=

==Install by using subversion externals==

You can use the released version of the Django page CMS by using subversion externals

{{{
$ svn pe svn:externals .
pages                   http://django-page-cms.googlecode.com/svn/tags/django-page-cms-0.1
mptt                    http://django-mptt.googlecode.com/svn/trunk/mptt
tagging                 http://django-tagging.googlecode.com/svn/trunk/tagging
}}}

Or if you want the latest version

{{{
pages                   http://django-page-cms.googlecode.com/svn/trunk/pages
}}}

Tagging is optional. If you don't want it please set PAGE_TAGGING setting to False in your settings. After that simply add wanted apps to your installed apps :

{{{
INSTALLED_APPS = (
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.admin',
    'django.contrib.sites',
    'mptt',
    'tagging',
    'pages',
    ...
)
}}}

==Urls and settings==

Please take a look in the urls.py of the default project and copy desired urls in your settings. Basically you need to have something like this:

{{{
urlpatterns = patterns('',
    ...
    url(r'^pages/', include('pages.urls')),
    (r'^admin/(.*)', admin.site.root),
)
}}}

For the settings have a look in pages/settings.py for available options.

===Template context processors and Middlwares===

Add django.core.context_processors.request and pages.context_processors.media to your TEMPLATE_CONTEXT_PROCESSORS and django.middleware.locale.LocaleMiddleware middleware to MIDDLEWARE_CLASSES.

{{{
TEMPLATE_CONTEXT_PROCESSORS = (
    ...
    "django.core.context_processors.auth",
    "django.core.context_processors.i18n",
    "django.core.context_processors.debug",
    "django.core.context_processors.media",
    "django.core.context_processors.request",
    "pages.context_processors.media",
    ...
)

...

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.middleware.doc.XViewMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'pages.middleware.CurrentSiteMiddleware',
    ...
)
}}}

===Default language and template===

You must set DEFAULT_PAGE_TEMPLATE to the name of your default CMS template. And LANGUAGES with wanted languages.

{{{
gettext_noop = lambda s: s
LANGUAGES = (
    ('fr', gettext_noop('French')),
    ('de', gettext_noop('German')),
    ('en', gettext_noop('English')),
)

DEFAULT_PAGE_TEMPLATE = 'pages/index.html'
}}}

===Additional templates===

Optionally you can set PAGE_TEMPLATES if you want additional templates choices:

{{{
PAGE_TEMPLATES = (
    ('pages/nice.html', 'nice one'),
    ('pages/cool.html', 'cool one'),
)
}}}

===The sites framework===

Django page CMS use the [http://docs.djangoproject.com/en/dev/ref/contrib/sites/#ref-contrib-sites Django contrib sites framework] so you must define the SITE_ID setting and create the appropriate Site object into the admin interface:

{{{
SITE_ID = 1
}}}


The Site object should have the domain that match your actual domain (ie: 127.0.0.1:8000)